" Call plugins
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.
Plug 'https://github.com/nightsense/carbonized'
Plug 'https://github.com/romainl/flattened'
Plug 'https://github.com/altercation/vim-colors-solarized'
Plug 'https://github.com/airblade/vim-gitgutter'
Plug 'https://github.com/tpope/vim-commentary'
Plug 'https://github.com/Valloric/YouCompleteMe'
" Plug 'https://github.com/zxqfl/tabnine-vim'
Plug 'https://github.com/vim-airline/vim-airline'
Plug 'https://github.com/vim-airline/vim-airline-themes'
Plug 'https://github.com/tpope/vim-fugitive'
Plug 'https://github.com/drewtempelmeyer/palenight.vim'
Plug 'https://github.com/kristijanhusak/vim-hybrid-material'
Plug 'https://github.com/hzchirs/vim-material'
Plug 'https://github.com/joshdick/onedark.vim'
Plug 'https://github.com/KeitaNakamura/neodark.vim'
Plug 'https://github.com/mhinz/vim-janah'
Plug 'https://github.com/sheerun/vim-polyglot'
Plug 'https://github.com/christoomey/vim-tmux-navigator'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

" List ends here. Plugins become visible to Vim after this call.
call plug#end()

" Line numbers
set number
set relativenumber

" backspace over everything in insert mode
set backspace=indent,eol,start

" cursor line
set cursorline
set cursorcolumn

" Theme stuff 
" Following 2 lines get Truecolor working in tmux
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set termguicolors
let g:enable_bold_font=1
let g:enable_italic_font=1
set background=dark
colorscheme janah
let g:airline_theme='neodark'
let g:airline#extensions#tabline#enabled = 1

" syntax highlighting
syntax enable
let g:cpp_member_variable_highlight = 1

" Auto reload files
set autoread

" tabs and whitespace
set tabstop=4
set shiftwidth=4
set expandtab
set softtabstop=4
set wrap!
set autoindent

" Hide info on bottom
set noru
set nosmd

" scrolling behavior
set scrolloff=5

" searching
set hlsearch
set incsearch
set ignorecase
set smartcase
set showmatch

" Get tags file from .git dir. Trailing semilcolon
" makes vim search up directory tree for .git dir
set tags+=./.git/tags;

" don't open annoying python function preview split
set completeopt-=preview

" gitgutter custom symbols
let g:gitgutter_sign_added = '|'
let g:gitgutter_sign_modified = '|'
let g:gitgutter_sign_removed = '|'

" double slash comments
autocmd FileType c,cpp,java setlocal commentstring=//\ %s
autocmd FileType m setlocal commentstring=%\ %s

" Disable semantic autocompletion in YouCompleteMe
let g:ycm_filetype_specific_completion_to_disable = {
      \ 'cpp': 1,
      \ 'c': 1}

" Faster buffer cycling
map <C-N> :bprevious<CR>
map <C-M> :bnext<CR>

" Yank to system clipboard (works on mac)
set clipboard=unnamed

" Open ctags definitions in new tab or vsplit
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>

" Search highlighted selection
vnoremap // y/\V<C-R>"<CR>

" Send visual selection to ipytho fifo buffer for execution
vnoremap <c-x> :'<,'>w! /tmp/cmd <CR> <bar> :silent execute '!python3 -m send2console -f /tmp/cmd &' <bar> :execute ':redraw!'<CR>

" In normal mode, highlight block betwee ## characters, so you
" can tap ctrl-x twice and run a code block
nnoremap <c-x> ?##<CR>jv/##<CR>k

" Close buffer and switch to prev, keeping window open
command CB bp|bd #

" Open fuzzy finder search at root of current git project
command OG execute 'FZF' system('git rev-parse --show-toplevel')[:-2]

" Function + command to switch between implementation and header in fuzzy
" finder
function CH_CMD()
    let fname = expand('%:t:r') " Get filename without extension
    let ext = expand('%:e') " Get filename extension

    " Choose opposite extension
    let new_ext = ""
    if ext=="hpp"
        let new_ext = ".cpp"
    elseif ext==".cpp"
        let new_ext = ".hpp"
    endif
        
    " Create full command
    let cmd_str = 'call fzf#run({"source": "git ls-files", "sink": "e", "down": "30%", "options": "--query='.fname.new_ext.'"})'
    return cmd_str
endfunction
command CH execute CH_CMD()
